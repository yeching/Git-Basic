###########################################
目录：
	1.安装
	2.配置
-------------------------------------------

1.安装
（1）由于的我的系统是ubuntu的，所以直接：
 	$ sudo apt-get install git
（2）从源代码安装：
	1.从源码安装 Git，需要安装 Git 依赖的库：curl、zlib、openssl、expat，还有libiconv
		$ sudo apt-get install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev
	为了能够添加更多格式的文档（如 doc, html, info），你需要安装以下的依赖包：

		  $ sudo yum install asciidoc xmlto docbook2x
		  $ sudo apt-get install asciidoc xmlto docbook2x

	2.取得最新发布版本的 tar 包，可以从 Kernel.org 网站获取，网址为 https://www.kernel.org/pub/software/scm/git，或从 GitHub 
	网站上的镜像来获得，网址为 https://github.com/git/git/releases。 通常在 GitHub 上的是最新版本，但 kernel.org 上包含有文件下载签名，
	如果你想验证下载正确性的话会用到。
	3.编译并安装
	  $ tar -zxf git-2.0.0.tar.gz
	  $ cd git-2.0.0
	  $ make configure
	  $ ./configure --prefix=/usr
	  $ make all doc info
	  $ sudo make install install-doc install-html install-info
	4.完成后，你可以使用 Git 来获取 Git 的升级：
 	 $ git clone git://git.kernel.org/pub/scm/git/git.git
2.配置
（1）.初次运行 Git 前的配置

	既然已经在系统上安装了 Git，你会想要做几件事来定制你的 Git 环境。 每台计算机上只需要配置一次，程序升级时会保留配置信息。
	 你可以在任何时候再次通过运行命令来修改它们。
	Git 自带一个 git config 的工具来帮助设置控制 Git 外观和行为的配置变量。 这些变量存储在三个不同的位置：

    1./etc/gitconfig 文件: 包含系统上每一个用户及他们仓库的通用配置。 如果使用带有 --system 选项的 git config 时，它会从此文件读写配置变量。

    2.~/.gitconfig 或 ~/.config/git/config 文件：只针对当前用户。 可以传递 --global 选项让 Git 读写此文件。

    3.当前使用仓库的 Git 目录中的 config 文件（就是 .git/config）：针对该仓库。

	每一个级别覆盖上一级别的配置，所以 .git/config 的配置变量会覆盖 /etc/gitconfig 中的配置变量。
用户信息
	当安装完 Git 应该做的第一件事就是设置你的用户名称与邮件地址。 这样做很重要，因为每一个 Git 的提交都会使用这些信息，
	并且它会写入到你的每一次提交中，不可更改：

	$ git config --global user.name "John Doe"
	$ git config --global user.email johndoe@example.com
文本编辑器
	$ git config --global core.editor vim
检查配置信息
	$ git config --list
	你可以通过输入 git config <key>： 来检查 Git 的某一项配置
	$ git config user.name



